import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

import java.nio.file.Files
import java.nio.file.Paths
import java.io.File

defaultTasks 'setupSearchFunc'

def dbUriDocker = dbUriEdit; //Missbrauch der Edit-DB Umgebungsvariable
def dbUserDocker = 'postgres';
def dbPwdDocker = 'postgres'; 

task createTable(type: SqlExecutor){
	database = [dbUriDocker, dbUserDocker, dbPwdDocker]
    sqlFiles = ['sql_ddl/drop_table.sql', 'sql_ddl/create_table.sql']
}

task loadData(type: Db2Db, dependsOn: createTable){
    sourceDb = [dbUriPub, dbUserPub, dbPwdPub]
    targetDb = [dbUriDocker, dbUserDocker, dbPwdDocker]
    transferSets = [
		new TransferSet('sql_dml/fill_objects.sql', 'public.searchobjects', false),
		new TransferSet('sql_dml/grundstuecke.sql', 'public.searchobjects', false),
		new TransferSet('sql_dml/adressen.sql', 'public.searchobjects', false),
	];        
}

task loadMeta(type: Db2Db, dependsOn: loadData){
    sourceDb = [dbUriSogis, dbUserSogis, dbPwdSogis]
    targetDb = [dbUriDocker, dbUserDocker, dbPwdDocker]
    transferSets = [
		new TransferSet('sql_dml/datasets.sql', 'public.searchobjects', false),
	];        
}

task setupSearchFunc(type: SqlExecutor, dependsOn: loadMeta){
	database = [dbUriDocker, dbUserDocker, dbPwdDocker]
    sqlFiles = ['sql_ddl/create_pg_trgm.sql']   //, 'sql_ddl/create_func_tok3.sql'] - SqlExecutor returns error --> exec manual 
}


